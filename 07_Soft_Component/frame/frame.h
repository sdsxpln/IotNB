//=====================================================================
//文件名称：frame.h
//功能概要：UE与MMP通信协议帧的数据构件头文件
//制作单位：苏州大学嵌入式系统与物联网研究所(sumcu.suda.edu.cn)
//版    本：2017-06-22  V1.0;
//=====================================================================
#ifndef _FRAME_H
#define _FRAME_H

#include "common.h"
#include "string.h"
#include "crc.h"
#include "uecom.h"

//UE与MMP通信协议帧数据结构体
#pragma  pack(push,1)
struct comData
{
	uint_8 body[3];
};
#pragma  pack(pop)

//=====================================================================
//函数名称：frameCreate
//功能概要：实现创建数据帧指针
//参数说明：imsi：发送数据的设备的IMSI号
//函数返回：不为0：成功
//=====================================================================
uint_8* frameCreate();

//=====================================================================
//函数名称：frameEncode
//功能概要：实现待发送数据的组帧,将待发送数据加上帧头、帧长、帧尾以及校验信息
//       frame=帧头+IMSI+帧长+data+CRC校验码+帧尾
//参数说明：imsi：发送数据的设备的IMSI号
//       data:待组帧的结构体数据
//       frame:组帧之后的待发送数据帧，用于发送
//       frameLen:组帧后的数据长度，用于发送
//函数返回：0：成功
//=====================================================================
uint_16 frameEncode(struct comData data, uint_8 *frame);

//=====================================================================
//函数名称：frameDecode
//功能概要：数据解帧,校验接收到的数据的帧头、帧尾、CRC校验字节，失败反馈错误信息；
//       成功则只留下数据部分data=frame-帧头-IMSI-帧长-CRC校验码-帧尾；
//参数说明：frame:需要解帧的数据
//      cdata：解帧后的结构体数据
//函数返回：0：成功
//=====================================================================
uint_8 frameDecode(uint_8 *frame,struct comData *cdata);

#endif
